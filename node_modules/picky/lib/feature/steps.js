
/*!
 * Picky
 * @license MIT
 */

/*
 * Module dependencies
 */

var feature = require('./index');

/*
 * Variables
 */

var Library = feature.Library;
var methods = ['given', 'when', 'then'];  // end, but ???

/*
 * Steps
 */

function Steps () {
  this.list = [];
}

methods.forEach(function (method) {
  Steps.prototype[method] = function (message, fn) {
    this.list.push({
      method: method,
      message: message,
      fn: fn
    });
    return this;
  };
});

/*
 * Exports
 */

Steps.prototype.merge = function (library) {
  if (!(library instanceof Library)) throw new Error('Not a Yadda.Library');
  this.list.forEach(function (item) {
    library[item.method](item.message, item.fn);
  });
  return this;
};

/*
 * Exports
 */

module.exports = Steps;
